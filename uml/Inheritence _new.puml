@startuml
'https://plantuml.com/class-diagram

abstract class AbstractFlyingObject{
    # locationX:int
    # locationY:int
    # speedX:int
    # speedY:int
    # image:BufferedImage
    # width:int
    # height:int
    # isValid:boolean

    + AbstractFlyingObject(int locationX, int locationY, int speedX, int speedY)
    + forward():void
    + crash(AbstractFlyingObject flyingObject):boolean
    + setLocation(double locationX, double locationY):void
    + getLocationX():int
    + getLocationY():int
    + getSpeedY():int
    + getImage():BufferedImage
    + getWidth():int
    + getHeight():int
    + notValid():boolean
    + vanish():void
}
abstract class AbstractAircraft extends AbstractFlyingObject{
	# maxHp:int
    # hp:int
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease):void
    + getHp():int
    + {abstract} shoot():List<BaseBullet>
 }

abstract class BaseBullet extends AbstractFlyingObject{
    - power:int
    + BaseBullet(int locationX, int locationY, int speedX, int speedY, int power)
    + forward():void
	+ getPower():int
}

abstract class AbstractItem extends AbstractFlyingObject{
    + AbstractItem(int locationX, int locationY, int speedX, int speedY)
    + {abstract}ActivateItem(HeroAircraft heroAircraft):void
    + forward():void
}

class HeroAircraft extends AbstractAircraft{
        - fireActivated:Boolean
        - heroAircraft:HeroAircraft
        - HeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
        + {static}getHeroAircraft():HeroAircraft
        + increaseHp(int increment):void
        + setFireActivated(Boolean flag):void
        + getFireActivated():Boolean
        + forward():void
        + shoot():List<BaseBullet>
}

abstract class AbstractEnemy extends AbstractAircraft{
    + dropItems(double[] thresh):AbstractItem
    + AbstractEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
}

class MobEnemy extends AbstractEnemy{
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + shoot():List<BaseBullet>
}
class EliteEnemy extends AbstractEnemy{
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + shoot():List<BaseBullet>
}

class BossEnemy extends AbstractEnemy{
    + {static}exist:Boolean
    + BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + shoot():List<BaseBullet>
}

class ItemBlood extends AbstractItem{
    - add_Hp:int
    + ItemBlood(int locationX, int locationY, int speedX, int speedY)
    + ActivateItem(HeroAircraft heroAircraft):void
}

class ItemFire extends AbstractItem{
    + ItemFire(int locationX, int locationY, int speedX, int speedY)
    + ActivateItem(HeroAircraft heroAircraft):void
}

class ItemBomb extends AbstractItem{
    - subscriber:ArrayList<AbstractFlyingObject>
    + ItemBomb(int locationX, int locationY, int speedX, int speedY)
    + addSubscriber(AbstractFlyingObject obj):void
    + addAllSubscriber(List<BaseBullet> obj):void
    + deleteSubscriber(AbstractFlyingObject obj):void
    + notifySubscriber():void
    + getSubscriber():ArrayList<AbstractFlyingObject>
    + ActivateItem(HeroAircraft heroAircraft):void
}

class HeroBullet extends BaseBullet{
    + HeroBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
}

class EnemyBullet extends BaseBullet{
    + EnemyBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
}

@enduml